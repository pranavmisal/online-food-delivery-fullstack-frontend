{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"src/app/services/notification.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nexport class SignupComponent {\n  constructor(authService, notificationService) {\n    this.authService = authService;\n    this.notificationService = notificationService;\n    this.user = {\n      username: '',\n      fullName: '',\n      email: '',\n      mobile: '',\n      password: '',\n      address: ''\n    };\n  }\n  signup() {\n    this.authService.signup(this.user).subscribe(response => {\n      this.notificationService.showSuccess('Sign up successful');\n      console.log('Sign up successful', response);\n    }, error => {\n      this.notificationService.showError('Sign up failed: ' + error.error.message);\n      console.error('Sign up failed', error);\n    });\n  }\n  static #_ = this.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.NotificationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 29,\n    vars: 6,\n    consts: [[1, \"login-form\", 3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"fullName\", \"name\", \"fullName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"mobile\", \"name\", \"mobile\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"id\", \"address\", \"name\", \"address\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Sign Up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.signup();\n        });\n        i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.user.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 1)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Full Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.user.fullName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 1)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-form-field\", 1)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.user.mobile = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 1)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"mat-form-field\", 1)(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"textarea\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_textarea_ngModelChange_26_listener($event) {\n          return ctx.user.address = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"button\", 7);\n        i0.ɵɵtext(28, \"Sign Up\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.fullName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.mobile);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.address);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.MatFormField, i4.MatLabel, i5.MatInput],\n    styles: [\".login-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 50%;\\n  margin: auto;\\n  padding: 10px;\\n  border-radius: 10px;\\n  box-shadow: 0px 1px 10px lightgray;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQ0FBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWZvcm17XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAxcHggMTBweCBsaWdodGdyYXk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["SignupComponent","constructor","authService","notificationService","user","username","fullName","email","mobile","password","address","signup","subscribe","response","showSuccess","console","log","error","showError","message","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","NotificationService","_2","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SignupComponent_Template_form_ngSubmit_2_listener","SignupComponent_Template_input_ngModelChange_6_listener","$event","SignupComponent_Template_input_ngModelChange_10_listener","SignupComponent_Template_input_ngModelChange_14_listener","SignupComponent_Template_input_ngModelChange_18_listener","SignupComponent_Template_input_ngModelChange_22_listener","SignupComponent_Template_textarea_ngModelChange_26_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\signup\\signup.component.ts","C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n  user = { username: '', fullName: '', email: '', mobile: '', password: '', address: '' };\n\n  constructor(\n    public authService: AuthService,\n    public notificationService: NotificationService\n  ){}\n\n  public signup(){\n    this.authService.signup(this.user).subscribe(\n      response => {\n        this.notificationService.showSuccess('Sign up successful');\n        console.log('Sign up successful', response);\n      },\n      error => {\n        this.notificationService.showError('Sign up failed: ' + error.error.message);\n        console.error('Sign up failed', error);\n      }\n    );\n  }\n}\n","<h1>Sign Up</h1>\n<form (ngSubmit)=\"signup()\" class=\"login-form\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Username</mat-label>\n    <input matInput type=\"text\" id=\"fullName\" [(ngModel)]=\"user.username\" name=\"fullName\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Full Name</mat-label>\n    <input matInput type=\"text\" id=\"fullName\" [(ngModel)]=\"user.fullName\" name=\"fullName\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Email</mat-label>\n    <input matInput type=\"email\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Mobile</mat-label>\n    <input matInput type=\"text\" id=\"mobile\" [(ngModel)]=\"user.mobile\" name=\"mobile\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Password</mat-label>\n    <input matInput type=\"password\" id=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Address</mat-label>\n    <textarea matInput id=\"address\" [(ngModel)]=\"user.address\" name=\"address\" required></textarea>\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" type=\"submit\">Sign Up</button>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}