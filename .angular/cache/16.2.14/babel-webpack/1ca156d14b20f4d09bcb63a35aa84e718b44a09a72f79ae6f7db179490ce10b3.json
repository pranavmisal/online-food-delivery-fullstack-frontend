{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.credentials = {\n      email: '',\n      password: ''\n    };\n  }\n  login() {\n    this.authService.login(this.credentials).subscribe(response => {\n      console.log('Login successful', response);\n      this.router.navigate(['/home']);\n    }, error => {\n      console.error('Login failed', error);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.credentials.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 1)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.credentials.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵtext(12, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.MatFormField, i4.MatLabel, i5.MatInput],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","router","credentials","email","password","login","subscribe","response","console","log","navigate","error","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","LoginComponent_Template_input_ngModelChange_6_listener","$event","LoginComponent_Template_input_ngModelChange_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  public credentials = { email: '', password: '' };\n\n  constructor(public authService: AuthService, public router: Router){}\n\n  public login(){\n    this.authService.login(this.credentials).subscribe(\n      response => {\n        console.log('Login successful', response);\n        this.router.navigate(['/home']);\n      },\n      error => {\n        console.error('Login failed', error);\n      }\n    );\n  }\n}\n","<h1>Login</h1>\n<form (ngSubmit)=\"login()\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Email</mat-label>\n    <input matInput type=\"email\" id=\"email\" [(ngModel)]=\"credentials.email\" name=\"email\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Password</mat-label>\n    <input matInput type=\"password\" id=\"password\" [(ngModel)]=\"credentials.password\" name=\"password\" required>\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" type=\"submit\">Login</button>\n</form>\n\n"],"mappings":";;;;;;AASA,OAAM,MAAOA,cAAc;EAGzBC,YAAmBC,WAAwB,EAASC,MAAc;IAA/C,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAFnD,KAAAC,WAAW,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;EAEoB;EAE7DC,KAAKA,CAAA;IACV,IAAI,CAACL,WAAW,CAACK,KAAK,CAAC,IAAI,CAACH,WAAW,CAAC,CAACI,SAAS,CAChDC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;MACzC,IAAI,CAACN,MAAM,CAACS,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACDC,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,CACF;EACH;EAAC,QAAAC,CAAA,G;qBAfUd,cAAc,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdrB,cAAc;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3Bb,EAAA,CAAAe,cAAA,SAAI;QAAAf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACdjB,EAAA,CAAAe,cAAA,cAA2B;QAArBf,EAAA,CAAAkB,UAAA,sBAAAC,iDAAA;UAAA,OAAYL,GAAA,CAAAtB,KAAA,EAAO;QAAA,EAAC;QACxBQ,EAAA,CAAAe,cAAA,wBAAkC;QACrBf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAY;QAC5BjB,EAAA,CAAAe,cAAA,eAA8F;QAAtDf,EAAA,CAAAkB,UAAA,2BAAAE,uDAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAzB,WAAA,CAAAC,KAAA,GAAA+B,MAAA;QAAA,EAA+B;QAAvErB,EAAA,CAAAiB,YAAA,EAA8F;QAGhGjB,EAAA,CAAAe,cAAA,wBAAkC;QACrBf,EAAA,CAAAgB,MAAA,eAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAY;QAC/BjB,EAAA,CAAAe,cAAA,gBAA0G;QAA5Df,EAAA,CAAAkB,UAAA,2BAAAI,wDAAAD,MAAA;UAAA,OAAAP,GAAA,CAAAzB,WAAA,CAAAE,QAAA,GAAA8B,MAAA;QAAA,EAAkC;QAAhFrB,EAAA,CAAAiB,YAAA,EAA0G;QAG5GjB,EAAA,CAAAe,cAAA,iBAAwD;QAAAf,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAR5BjB,EAAA,CAAAuB,SAAA,GAA+B;QAA/BvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAAzB,WAAA,CAAAC,KAAA,CAA+B;QAKzBU,EAAA,CAAAuB,SAAA,GAAkC;QAAlCvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAAzB,WAAA,CAAAE,QAAA,CAAkC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}