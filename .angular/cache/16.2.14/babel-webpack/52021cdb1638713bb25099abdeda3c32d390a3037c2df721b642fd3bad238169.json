{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cart = [];\n    this.itemAdded = new EventEmitter();\n  }\n  addToCart(menuItem, quantity) {\n    const existingItem = this.cart.find(item => item.menuItem.id === menuItem.id);\n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      this.cart.push({\n        menuItem,\n        quantity\n      });\n    }\n    this.itemAdded.emit(menuItem);\n  }\n  getCartItems() {\n    return this.cart;\n  }\n  clearCart() {\n    this.cart = [];\n  }\n  getTotalItemCount() {\n    return this.cart.reduce((total, item) => total + item.quantity, 0);\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","CartService","constructor","cart","itemAdded","addToCart","menuItem","quantity","existingItem","find","item","id","push","emit","getCartItems","clearCart","getTotalItemCount","reduce","total","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { Menu } from '../models/menu.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  public cart: {menuItem: Menu, quantity: number}[] = [];\n  public itemAdded: EventEmitter<Menu> = new EventEmitter<Menu>();\n\n  constructor() { }\n\n  public addToCart(menuItem: Menu, quantity: number){\n    const existingItem = this.cart.find(item => item.menuItem.id === menuItem.id);\n    if (existingItem){\n      existingItem.quantity += quantity;\n    } else {\n      this.cart.push({menuItem, quantity});\n    }\n    this.itemAdded.emit(menuItem);\n  }\n\n  public getCartItems(){\n    return this.cart;\n  }\n\n  public clearCart(){\n    this.cart = [];\n  }\n\n  public getTotalItemCount(): number {\n    return this.cart.reduce((total, item) => total + item.quantity, 0);\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;;AAMxD,OAAM,MAAOC,WAAW;EAItBC,YAAA;IAHO,KAAAC,IAAI,GAAyC,EAAE;IAC/C,KAAAC,SAAS,GAAuB,IAAIJ,YAAY,EAAQ;EAE/C;EAETK,SAASA,CAACC,QAAc,EAAEC,QAAgB;IAC/C,MAAMC,YAAY,GAAG,IAAI,CAACL,IAAI,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,QAAQ,CAACK,EAAE,KAAKL,QAAQ,CAACK,EAAE,CAAC;IAC7E,IAAIH,YAAY,EAAC;MACfA,YAAY,CAACD,QAAQ,IAAIA,QAAQ;KAClC,MAAM;MACL,IAAI,CAACJ,IAAI,CAACS,IAAI,CAAC;QAACN,QAAQ;QAAEC;MAAQ,CAAC,CAAC;;IAEtC,IAAI,CAACH,SAAS,CAACS,IAAI,CAACP,QAAQ,CAAC;EAC/B;EAEOQ,YAAYA,CAAA;IACjB,OAAO,IAAI,CAACX,IAAI;EAClB;EAEOY,SAASA,CAAA;IACd,IAAI,CAACZ,IAAI,GAAG,EAAE;EAChB;EAEOa,iBAAiBA,CAAA;IACtB,OAAO,IAAI,CAACb,IAAI,CAACc,MAAM,CAAC,CAACC,KAAK,EAAER,IAAI,KAAKQ,KAAK,GAAGR,IAAI,CAACH,QAAQ,EAAE,CAAC,CAAC;EACpE;EAAC,QAAAY,CAAA,G;qBA1BUlB,WAAW;EAAA;EAAA,QAAAmB,EAAA,G;WAAXnB,WAAW;IAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}