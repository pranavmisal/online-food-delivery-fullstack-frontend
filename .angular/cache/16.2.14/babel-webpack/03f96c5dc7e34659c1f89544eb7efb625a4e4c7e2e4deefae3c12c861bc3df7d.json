{"ast":null,"code":"import { MenuDashboardComponent } from '../menu-dashboard/menu-dashboard.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/restaurant.service\";\nimport * as i2 from \"../services/notification.service\";\nimport * as i3 from \"../services/menu.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/badge\";\nfunction DashboardComponent_mat_card_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 9)(1, \"mat-card-header\");\n    i0.ɵɵelement(2, \"img\", 10);\n    i0.ɵɵelementStart(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"span\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"mat-card-actions\")(11, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_mat_card_22_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const restaurant_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editRestaurant(restaurant_r2));\n    });\n    i0.ɵɵtext(12, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_mat_card_22_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const restaurant_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteRestaurant(restaurant_r2));\n    });\n    i0.ɵɵtext(14, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_mat_card_22_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const restaurant_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.viewMenus(restaurant_r2));\n    });\n    i0.ɵɵtext(16, \"View Menus\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_mat_card_22_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const restaurant_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.openAddMenuDialog(restaurant_r2));\n    });\n    i0.ɵɵtext(18, \"Add Menu\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const restaurant_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", restaurant_r2.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", restaurant_r2.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matBadge\", restaurant_r2.menuCount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(restaurant_r2.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(restaurant_r2.mobile);\n  }\n}\nfunction DashboardComponent_div_23_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 18)(1, \"div\")(2, \"h4\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 19);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\")(9, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_23_li_4_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const menuItem_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.openEditMenuDialog(menuItem_r9));\n    });\n    i0.ɵɵtext(10, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_23_li_4_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const menuItem_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.deleteMenu(menuItem_r9));\n    });\n    i0.ɵɵtext(12, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const menuItem_r9 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(menuItem_r9.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(menuItem_r9.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", menuItem_r9.price, \"\");\n  }\n}\nfunction DashboardComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\", 16);\n    i0.ɵɵtemplate(4, DashboardComponent_div_23_li_4_Template, 13, 3, \"li\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Menu Items for \", ctx_r1.selectedRestaurant.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.menus);\n  }\n}\nexport class DashboardComponent {\n  constructor(restaurantService, notificationService, menuService, dialog) {\n    this.restaurantService = restaurantService;\n    this.notificationService = notificationService;\n    this.menuService = menuService;\n    this.dialog = dialog;\n    this.restaurant = {\n      name: '',\n      address: '',\n      image: '',\n      mobile: ''\n    };\n    this.restaurants = [];\n    this.menus = [];\n  }\n  ngOnInit() {\n    this.fetchRestaurants();\n  }\n  saveRestaurant() {\n    if (this.selectedRestaurant) {\n      this.restaurantService.updateRestaurant(this.selectedRestaurant.id, this.restaurant).subscribe(response => {\n        this.notificationService.showSuccess('Restaurant updated successfully');\n        this.fetchRestaurants();\n        this.resetForm();\n      }, error => {\n        this.notificationService.showError('Error updating restaurant: ' + error.message);\n        console.error('Error updating restaurant:', error);\n      });\n    } else {\n      this.restaurantService.saveRestaurant(this.restaurant).subscribe(response => {\n        this.notificationService.showSuccess('Restaurant saved successfully');\n        this.fetchRestaurants();\n        this.resetForm();\n        console.log('Restaurant saved successfully');\n      }, error => {\n        this.notificationService.showError('Error saving restaurant: ' + error.message);\n        console.error('Error saving restaurant:', error);\n      });\n    }\n  }\n  // public fetchRestaurants() {\n  //   this.restaurantService.getRestaurants().subscribe(\n  //     (data: any[]) => {\n  //       this.restaurants = data;\n  //     },\n  //     (error) => {\n  //       this.notificationService.showError('Error fetching restaurants: ' + error.message);\n  //       console.error('Error fetching restaurants:', error);\n  //     }\n  //   );\n  // }\n  fetchRestaurants() {\n    this.restaurantService.getRestaurants().subscribe(restaurants => {\n      restaurants.forEach(restaurant => {\n        this.menuService.getMenus(restaurant.id).subscribe(menus => {\n          restaurant.menuCount = menus.length;\n        }, error => {\n          restaurant.menuCount = 0;\n          this.notificationService.showError('Error fetching menus: ' + error.message);\n          console.error('Error fetching menus:', error);\n        });\n      });\n      this.restaurants = restaurants;\n    }, error => {\n      this.notificationService.showError('Error fetching restaurants: ' + error.message);\n      console.error('Error fetching restaurants:', error);\n    });\n  }\n  editRestaurant(restaurant) {\n    this.selectedRestaurant = {\n      ...restaurant\n    };\n    this.restaurant = {\n      ...restaurant\n    };\n    this.fetchMenus(restaurant.id);\n  }\n  deleteRestaurant(restaurant) {\n    this.restaurantService.deleteRestaurant(restaurant.id).subscribe(() => {\n      this.notificationService.showSuccess('Restaurant deleted successfully');\n      this.fetchRestaurants();\n    }, error => {\n      this.notificationService.showError('Error deleting restaurant: ' + error.message);\n    });\n  }\n  viewMenus(restaurant) {\n    console.log('Viewing menus for restaurant:', restaurant);\n    this.selectedRestaurant = restaurant;\n    this.fetchMenus(restaurant.id);\n  }\n  fetchMenus(restaurantId) {\n    console.log('Fetching menus for restaurantId: ', restaurantId);\n    this.menuService.getMenus(restaurantId).subscribe(data => {\n      this.menus = data;\n    }, error => {\n      this.notificationService.showError('Error fetching menus: ' + error.message);\n      console.error('Error fetching menus:', error);\n    });\n  }\n  openAddMenuDialog(restaurant) {\n    const dialogRef = this.dialog.open(MenuDashboardComponent, {\n      width: '400px',\n      data: {\n        restaurant\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.fetchMenus(restaurant.id);\n      }\n    });\n  }\n  openEditMenuDialog(menu) {\n    const dialogRef = this.dialog.open(MenuDashboardComponent, {\n      width: '400px',\n      data: {\n        restaurant: this.selectedRestaurant,\n        menu\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.fetchMenus(this.selectedRestaurant.id);\n      }\n    });\n  }\n  deleteMenu(menu) {\n    if (menu.id) {\n      this.menuService.deleteMenu(menu.id).subscribe(() => {\n        this.notificationService.showSuccess('Menu deleted successfully');\n        this.fetchMenus(menu.restaurantId);\n      }, error => {\n        this.notificationService.showError('Error deleting menu: ' + error.message);\n        console.error('Error deleting menu:', error);\n      });\n    }\n  }\n  resetForm() {\n    this.selectedRestaurant = null;\n    this.restaurant = {\n      name: '',\n      address: '',\n      image: '',\n      mobile: ''\n    };\n    this.menus = [];\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.RestaurantService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.MenuService), i0.ɵɵdirectiveInject(i4.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 24,\n    vars: 7,\n    consts: [[1, \"dashboard-form\"], [\"matInput\", \"\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"name\", \"address\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"name\", \"image\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"name\", \"mobile\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"restaurant-container\", 2, \"display\", \"flex\", \"flex-wrap\", \"wrap\"], [\"class\", \"restaurant-card\", \"style\", \"margin: 10px;;\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"mt-4\", 4, \"ngIf\"], [1, \"restaurant-card\", 2, \"margin\", \"10px\"], [\"mat-card-avatar\", \"\", \"alt\", \"Restaurant Image\", 3, \"src\"], [\"matBadgeOverlap\", \"false\", \"matBadgeColor\", \"accent\", 2, \"margin-left\", \"8px\", 3, \"matBadge\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"accent\", 3, \"click\"], [1, \"mt-4\"], [1, \"list-group\", 2, \"display\", \"flex\", \"list-style-type\", \"none\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", \"style\", \"margin-left: 10px; border: 1px solid lightgray; border-radius: 5px; padding: 5px;\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\", 2, \"margin-left\", \"10px\", \"border\", \"1px solid lightgray\", \"border-radius\", \"5px\", \"padding\", \"5px\"], [1, \"mb-1\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Add New Restaurant\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"mat-form-field\")(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Restaurant Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.restaurant.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.restaurant.address = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-form-field\")(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.restaurant.image = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-form-field\")(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Mobile Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.restaurant.mobile = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_19_listener() {\n          return ctx.saveRestaurant();\n        });\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 6);\n        i0.ɵɵtemplate(22, DashboardComponent_mat_card_22_Template, 19, 5, \"mat-card\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, DashboardComponent_div_23_Template, 5, 2, \"div\", 8);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.restaurant.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.restaurant.address);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.restaurant.image);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.restaurant.mobile);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.selectedRestaurant ? \"Update\" : \"Save\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.restaurants);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedRestaurant);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.MatInput, i8.MatFormField, i8.MatLabel, i9.MatCard, i9.MatCardActions, i9.MatCardAvatar, i9.MatCardHeader, i9.MatCardSubtitle, i9.MatCardTitle, i10.MatButton, i11.MatBadge],\n    styles: [\".dashboard-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: auto;\\n  width: 50%;\\n  padding: 10px;\\n  border-radius: 10px;\\n  box-shadow: 0px 1px 10px lightgray;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxVQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0NBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQtZm9ybXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDFweCAxMHB4IGxpZ2h0Z3JheTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MenuDashboardComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_mat_card_22_Template_button_click_11_listener","restoredCtx","ɵɵrestoreView","_r4","restaurant_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editRestaurant","DashboardComponent_mat_card_22_Template_button_click_13_listener","ctx_r5","deleteRestaurant","DashboardComponent_mat_card_22_Template_button_click_15_listener","ctx_r6","viewMenus","DashboardComponent_mat_card_22_Template_button_click_17_listener","ctx_r7","openAddMenuDialog","ɵɵadvance","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵtextInterpolate1","name","ɵɵpropertyInterpolate","menuCount","ɵɵtextInterpolate","address","mobile","DashboardComponent_div_23_li_4_Template_button_click_9_listener","_r11","menuItem_r9","ctx_r10","openEditMenuDialog","DashboardComponent_div_23_li_4_Template_button_click_11_listener","ctx_r12","deleteMenu","description","price","ɵɵtemplate","DashboardComponent_div_23_li_4_Template","ctx_r1","selectedRestaurant","menus","DashboardComponent","constructor","restaurantService","notificationService","menuService","dialog","restaurant","restaurants","ngOnInit","fetchRestaurants","saveRestaurant","updateRestaurant","id","subscribe","response","showSuccess","resetForm","error","showError","message","console","log","getRestaurants","forEach","getMenus","length","fetchMenus","restaurantId","data","dialogRef","open","width","afterClosed","result","menu","_","ɵɵdirectiveInject","i1","RestaurantService","i2","NotificationService","i3","MenuService","i4","MatDialog","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_Template_input_ngModelChange_6_listener","$event","DashboardComponent_Template_input_ngModelChange_10_listener","DashboardComponent_Template_input_ngModelChange_14_listener","DashboardComponent_Template_input_ngModelChange_18_listener","DashboardComponent_Template_button_click_19_listener","DashboardComponent_mat_card_22_Template","DashboardComponent_div_23_Template"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RestaurantService } from '../services/restaurant.service';\nimport { NotificationService } from '../services/notification.service';\nimport { MenuService } from '../services/menu.service';\nimport { Menu } from '../models/menu.model';\nimport { MenuDashboardComponent } from '../menu-dashboard/menu-dashboard.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n  public restaurant = { name: '', address: '', image: '', mobile: '' };\n  public restaurants: any[] = [];\n  public selectedRestaurant: any;\n  public menus: Menu[] = [];\n\n  constructor(\n    public restaurantService: RestaurantService,\n    public notificationService: NotificationService,\n    public menuService: MenuService,\n    public dialog: MatDialog\n  ){}\n\n  ngOnInit() {\n    this.fetchRestaurants();\n  }\n\n  public saveRestaurant() {\n    if (this.selectedRestaurant) {\n      this.restaurantService.updateRestaurant(this.selectedRestaurant.id, this.restaurant).subscribe(\n        (response) => {\n          this.notificationService.showSuccess('Restaurant updated successfully');\n          this.fetchRestaurants();\n          this.resetForm();\n        },\n        error => {\n          this.notificationService.showError('Error updating restaurant: ' + error.message);\n          console.error('Error updating restaurant:', error);\n        }\n      );\n    } else {\n      this.restaurantService.saveRestaurant(this.restaurant).subscribe(\n        (response) => {\n          this.notificationService.showSuccess('Restaurant saved successfully');\n          this.fetchRestaurants();\n          this.resetForm();\n          console.log('Restaurant saved successfully');\n        },\n        error => {\n          this.notificationService.showError('Error saving restaurant: ' + error.message);\n          console.error('Error saving restaurant:', error);\n        }\n      );\n    }\n  }\n\n  // public fetchRestaurants() {\n  //   this.restaurantService.getRestaurants().subscribe(\n  //     (data: any[]) => {\n  //       this.restaurants = data;\n  //     },\n  //     (error) => {\n  //       this.notificationService.showError('Error fetching restaurants: ' + error.message);\n  //       console.error('Error fetching restaurants:', error);\n  //     }\n  //   );\n  // }\n\n  public fetchRestaurants(){\n    this.restaurantService.getRestaurants().subscribe(\n      (restaurants: any[]) => {\n        restaurants.forEach(restaurant => {\n          this.menuService.getMenus(restaurant.id).subscribe(\n            (menus: Menu[]) => {\n              restaurant.menuCount = menus.length;\n            },\n            (error) => {\n              restaurant.menuCount = 0;\n              this.notificationService.showError('Error fetching menus: ' + error.message);\n              console.error('Error fetching menus:', error);\n            }\n          );\n        });\n        this.restaurants = restaurants;\n      },\n      (error) => {\n        this.notificationService.showError('Error fetching restaurants: ' + error.message);\n        console.error('Error fetching restaurants:', error);\n      }\n    );\n  }\n\n  public editRestaurant(restaurant: any) {\n    this.selectedRestaurant = { ...restaurant };\n    this.restaurant = { ...restaurant };\n    this.fetchMenus(restaurant.id);\n  }\n\n  public deleteRestaurant(restaurant: any) {\n    this.restaurantService.deleteRestaurant(restaurant.id).subscribe(\n      () => {\n        this.notificationService.showSuccess('Restaurant deleted successfully');\n        this.fetchRestaurants();\n      },\n      error => {\n        this.notificationService.showError('Error deleting restaurant: ' + error.message);\n      }\n    );\n  }\n\n  public viewMenus(restaurant: any){\n    console.log('Viewing menus for restaurant:', restaurant);\n    this.selectedRestaurant = restaurant;\n    this.fetchMenus(restaurant.id);\n  }\n\n  public fetchMenus(restaurantId: number) {\n    console.log('Fetching menus for restaurantId: ', restaurantId);\n    this.menuService.getMenus(restaurantId).subscribe(\n      (data: Menu[]) => {\n        this.menus = data;\n      },\n      (error) => {\n        this.notificationService.showError('Error fetching menus: ' + error.message);\n        console.error('Error fetching menus:', error);\n      }\n    );\n  }\n\n  public openAddMenuDialog(restaurant: any) {\n    const dialogRef = this.dialog.open(MenuDashboardComponent, {\n      width: '400px',\n      data: { restaurant }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.fetchMenus(restaurant.id);\n      }\n    });\n  }\n\n  public openEditMenuDialog(menu: Menu) {\n    const dialogRef = this.dialog.open(MenuDashboardComponent, {\n      width: '400px',\n      data: { restaurant: this.selectedRestaurant, menu }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.fetchMenus(this.selectedRestaurant.id);\n      }\n    });\n  }\n\n  public deleteMenu(menu: Menu) {\n    if (menu.id) {\n      this.menuService.deleteMenu(menu.id).subscribe(\n        () => {\n          this.notificationService.showSuccess('Menu deleted successfully');\n          this.fetchMenus(menu.restaurantId);\n        },\n        error => {\n          this.notificationService.showError('Error deleting menu: ' + error.message);\n          console.error('Error deleting menu:', error);\n        }\n      );\n    }\n  }\n\n  public resetForm() {\n    this.selectedRestaurant = null;\n    this.restaurant = { name: '', address: '', image: '', mobile: '' };\n    this.menus = [];\n  }\n}\n","<h1>Add New Restaurant</h1>\n<form class=\"dashboard-form\">\n  <mat-form-field>\n    <mat-label>Restaurant Name</mat-label>\n    <input matInput [(ngModel)]=\"restaurant.name\" name=\"name\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Address</mat-label>\n    <input matInput [(ngModel)]=\"restaurant.address\" name=\"address\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Image URL</mat-label>\n    <input matInput [(ngModel)]=\"restaurant.image\" name=\"image\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Mobile Number</mat-label>\n    <input matInput [(ngModel)]=\"restaurant.mobile\" name=\"mobile\" required>\n  </mat-form-field>\n  <button mat-raised-button color=\"primary\" (click)=\"saveRestaurant()\">\n    {{selectedRestaurant ? 'Update': 'Save'}}\n  </button>\n</form>\n\n<!-- show restaurant list -->\n<div class=\"restaurant-container\" style=\"display: flex; flex-wrap: wrap;\">\n  <mat-card *ngFor=\"let restaurant of restaurants\" class=\"restaurant-card\" style=\"margin: 10px;;\">\n    <mat-card-header>\n      <img mat-card-avatar [src]=\"restaurant.image\" alt=\"Restaurant Image\">\n      <mat-card-title>\n        {{ restaurant.name }}\n        <span matBadge=\"{{restaurant.menuCount}}\" matBadgeOverlap=\"false\" matBadgeColor=\"accent\" style=\"margin-left: 8px;\"></span>\n      </mat-card-title>\n      <mat-card-subtitle>{{ restaurant.address }}</mat-card-subtitle>\n      <mat-card-subtitle>{{ restaurant.mobile }}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-actions>\n      <button mat-button color=\"primary\" (click)=\"editRestaurant(restaurant)\">Edit</button>\n      <button mat-button color=\"warn\" (click)=\"deleteRestaurant(restaurant)\">Delete</button>\n      <button mat-button color=\"accent\" (click)=\"viewMenus(restaurant)\">View Menus</button>\n      <button mat-button color=\"accent\" (click)=\"openAddMenuDialog(restaurant)\">Add Menu</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n\n<!-- Menu items section -->\n<div *ngIf=\"selectedRestaurant\" class=\"mt-4\">\n  <h3>Menu Items for {{selectedRestaurant.name}}</h3>\n  <ul class=\"list-group\" style=\"display: flex; list-style-type: none;\">\n    <li class=\"list-group-item d-flex justify-content-between align-items-center\" style=\"margin-left: 10px; border: 1px solid lightgray; border-radius: 5px; padding: 5px;\" *ngFor=\"let menuItem of menus\">\n      <div>\n        <h4 class=\"mb-1\">{{menuItem.name}}</h4>\n        <p class=\"mb-1\">{{menuItem.description}}</p>\n        <p class=\"mb-1\">${{menuItem.price}}</p>\n      </div>\n      <div>\n        <button mat-button color=\"primary\" (click)=\"openEditMenuDialog(menuItem)\">Edit</button>\n        <button mat-button color=\"warn\" (click)=\"deleteMenu(menuItem)\">Delete</button>\n      </div>\n    </li>\n  </ul>\n</div>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}