{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/auth';\n  }\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n  signup(user) {\n    return this.http.post(`${this.apiUrl}/signup`, user);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","login","credentials","post","signup","user","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:3000/api/auth';\n  \n  constructor(public http: HttpClient) { }\n\n  public login(credentials: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n\n  public signup(user: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/signup`, user);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAmBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFf,KAAAC,MAAM,GAAG,gCAAgC;EAEV;EAEhCC,KAAKA,CAACC,WAAgB;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAEE,WAAW,CAAC;EAC5D;EAEOE,MAAMA,CAACC,IAAS;IACrB,OAAO,IAAI,CAACN,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,SAAS,EAAEK,IAAI,CAAC;EACtD;EAAC,QAAAC,CAAA,G;qBAXUT,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}