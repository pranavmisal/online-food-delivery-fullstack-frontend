{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/notification.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nexport class LoginComponent {\n  constructor(authService, router, notificationService) {\n    this.authService = authService;\n    this.router = router;\n    this.notificationService = notificationService;\n    this.credentials = {\n      identifier: '',\n      password: ''\n    };\n  }\n  login() {\n    this.authService.login(this.credentials).subscribe(response => {\n      this.notificationService.showSuccess('Login successful');\n      console.log('Login successful', response);\n      this.router.navigate(['/home']);\n    }, error => {\n      if (error.message === 'User is already logged in.') {\n        this.notificationService.showError('You are already logged in. Please log out first.');\n      } else {\n        this.notificationService.showError('Login failed: ' + error.error.message);\n      }\n      console.error('Login failed', error);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NotificationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[1, \"login-form\", 3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"email\", \"id\", \"identifier\", \"name\", \"identifier\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Email, Username or Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.credentials.identifier = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 1)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.credentials.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵtext(12, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.identifier);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.MatFormField, i5.MatLabel, i6.MatInput],\n    styles: [\".login-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 50%;\\n  margin: auto;\\n  padding: 10px;\\n  border-radius: 10px;\\n  box-shadow: 0px 1px 10px lightgray;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0NBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1mb3Jte1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMXB4IDEwcHggbGlnaHRncmF5O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","router","notificationService","credentials","identifier","password","login","subscribe","response","showSuccess","console","log","navigate","error","message","showError","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","NotificationService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","LoginComponent_Template_input_ngModelChange_6_listener","$event","LoginComponent_Template_input_ngModelChange_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  public credentials = { identifier: '', password: '' };\n\n  constructor(\n    public authService: AuthService, \n    public router: Router,\n    public notificationService: NotificationService\n  ){}\n\n  public login(){\n    this.authService.login(this.credentials).subscribe(\n      response => {\n        this.notificationService.showSuccess('Login successful')\n        console.log('Login successful', response);\n        this.router.navigate(['/home']);\n      },\n      error => {\n        if (error.message === 'User is already logged in.'){\n          this.notificationService.showError('You are already logged in. Please log out first.');\n        } else {\n          this.notificationService.showError('Login failed: ' + error.error.message)\n        }\n        console.error('Login failed', error);\n      }\n    );\n  }\n}\n","<h1>Login</h1>\n<form (ngSubmit)=\"login()\" class=\"login-form\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Email, Username or Mobile</mat-label>\n    <input matInput type=\"email\" id=\"identifier\" [(ngModel)]=\"credentials.identifier\" name=\"identifier\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Password</mat-label>\n    <input matInput type=\"password\" id=\"password\" [(ngModel)]=\"credentials.password\" name=\"password\" required>\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" type=\"submit\">Login</button>\n</form>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}