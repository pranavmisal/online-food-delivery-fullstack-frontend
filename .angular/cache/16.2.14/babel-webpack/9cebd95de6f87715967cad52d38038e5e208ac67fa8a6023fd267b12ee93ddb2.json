{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.credentials = {\n      email: '',\n      password: ''\n    };\n  }\n  login() {\n    this.authService.login(this.credentials).subscribe(response => {\n      console.log('Login successful', response);\n    }, error => {\n      console.error('Login failed', error);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.credentials.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.credentials.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵtext(12, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","credentials","email","password","login","subscribe","response","console","log","error","_","i0","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","LoginComponent_Template_input_ngModelChange_6_listener","$event","LoginComponent_Template_input_ngModelChange_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  credentials = { email: '', password: '' };\n\n  constructor(public authService: AuthService){}\n\n  public login(){\n    this.authService.login(this.credentials).subscribe(\n      response => {\n        console.log('Login successful', response);\n      },\n      error => {\n        console.error('Login failed', error);\n      }\n    );\n  }\n}\n","<h1>Login</h1>\n<form (ngSubmit)=\"login()\">\n  <div>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" [(ngModel)]=\"credentials.email\" name=\"email\" required>\n  </div>\n  <div>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" [(ngModel)]=\"credentials.password\" name=\"password\" required>\n  </div>\n  <button type=\"submit\">Login</button>\n</form>\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAmBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF9B,KAAAC,WAAW,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;EAEI;EAEtCC,KAAKA,CAAA;IACV,IAAI,CAACJ,WAAW,CAACI,KAAK,CAAC,IAAI,CAACH,WAAW,CAAC,CAACI,SAAS,CAChDC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;IAC3C,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,CACF;EACH;EAAC,QAAAC,CAAA,G;qBAdUZ,cAAc,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3BX,EAAA,CAAAa,cAAA,SAAI;QAAAb,EAAA,CAAAc,MAAA,YAAK;QAAAd,EAAA,CAAAe,YAAA,EAAK;QACdf,EAAA,CAAAa,cAAA,cAA2B;QAArBb,EAAA,CAAAgB,UAAA,sBAAAC,iDAAA;UAAA,OAAYL,GAAA,CAAAnB,KAAA,EAAO;QAAA,EAAC;QACxBO,EAAA,CAAAa,cAAA,UAAK;QACgBb,EAAA,CAAAc,MAAA,aAAM;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACjCf,EAAA,CAAAa,cAAA,eAAqF;QAAtDb,EAAA,CAAAgB,UAAA,2BAAAE,uDAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAtB,WAAA,CAAAC,KAAA,GAAA4B,MAAA;QAAA,EAA+B;QAA9DnB,EAAA,CAAAe,YAAA,EAAqF;QAEvFf,EAAA,CAAAa,cAAA,UAAK;QACmBb,EAAA,CAAAc,MAAA,gBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACvCf,EAAA,CAAAa,cAAA,gBAAiG;QAA5Db,EAAA,CAAAgB,UAAA,2BAAAI,wDAAAD,MAAA;UAAA,OAAAP,GAAA,CAAAtB,WAAA,CAAAE,QAAA,GAAA2B,MAAA;QAAA,EAAkC;QAAvEnB,EAAA,CAAAe,YAAA,EAAiG;QAEnGf,EAAA,CAAAa,cAAA,iBAAsB;QAAAb,EAAA,CAAAc,MAAA,aAAK;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QANHf,EAAA,CAAAqB,SAAA,GAA+B;QAA/BrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAtB,WAAA,CAAAC,KAAA,CAA+B;QAIzBS,EAAA,CAAAqB,SAAA,GAAkC;QAAlCrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAtB,WAAA,CAAAE,QAAA,CAAkC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}