{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"src/app/services/notification.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nexport class SignupComponent {\n  constructor(authService, notificationService, router) {\n    this.authService = authService;\n    this.notificationService = notificationService;\n    this.router = router;\n    this.user = {\n      username: '',\n      fullName: '',\n      email: '',\n      mobile: '',\n      password: '',\n      addresses: [{\n        address_line1: '',\n        address_line2: '',\n        city: '',\n        state: '',\n        postal_code: '',\n        country: ''\n      }]\n    };\n  }\n  signup() {\n    this.authService.signup(this.user).subscribe(response => {\n      this.notificationService.showSuccess('Sign up successful');\n      console.log('Sign up successful', response);\n      this.router.navigate(['/login']);\n    }, error => {\n      this.notificationService.showError('Sign up failed: ' + error.error.message);\n      console.error('Sign up failed', error);\n    });\n  }\n  addAddress() {\n    this.user.addresses.push({\n      address_line1: '',\n      address_line2: '',\n      city: '',\n      state: '',\n      postal_code: '',\n      country: ''\n    });\n  }\n  removeAddress(index) {\n    if (this.user.addresses.length > 1) {\n      this.user.addresses.splice(index, 1);\n    }\n  }\n  static #_ = this.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 29,\n    vars: 6,\n    consts: [[1, \"login-form\", 3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"fullName\", \"name\", \"fullName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"mobile\", \"name\", \"mobile\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"id\", \"address\", \"name\", \"address\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Sign Up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.signup();\n        });\n        i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.user.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 1)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Full Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.user.fullName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 1)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-form-field\", 1)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.user.mobile = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 1)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"mat-form-field\", 1)(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"textarea\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_textarea_ngModelChange_26_listener($event) {\n          return ctx.user.address = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"button\", 8);\n        i0.ɵɵtext(28, \"Sign Up\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.fullName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.mobile);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.address);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.MatFormField, i5.MatLabel, i6.MatInput],\n    styles: [\".login-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 50%;\\n  margin: auto;\\n  padding: 10px;\\n  border-radius: 10px;\\n  box-shadow: 0px 1px 10px lightgray;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQ0FBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWZvcm17XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAxcHggMTBweCBsaWdodGdyYXk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["SignupComponent","constructor","authService","notificationService","router","user","username","fullName","email","mobile","password","addresses","address_line1","address_line2","city","state","postal_code","country","signup","subscribe","response","showSuccess","console","log","navigate","error","showError","message","addAddress","push","removeAddress","index","length","splice","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","NotificationService","i3","Router","_2","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SignupComponent_Template_form_ngSubmit_2_listener","SignupComponent_Template_input_ngModelChange_6_listener","$event","SignupComponent_Template_input_ngModelChange_10_listener","SignupComponent_Template_input_ngModelChange_14_listener","SignupComponent_Template_input_ngModelChange_18_listener","SignupComponent_Template_input_ngModelChange_22_listener","SignupComponent_Template_textarea_ngModelChange_26_listener","address","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\signup\\signup.component.ts","C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\auth\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n  public user = { \n    username: '', \n    fullName: '', \n    email: '', \n    mobile: '', \n    password: '', \n    addresses: [{address_line1: '', address_line2: '', city: '', state: '', postal_code: '', country: ''}]\n  };\n\n  constructor(\n    public authService: AuthService,\n    public notificationService: NotificationService,\n    public router: Router\n  ){}\n\n  public signup(){\n    this.authService.signup(this.user).subscribe(\n      response => {\n        this.notificationService.showSuccess('Sign up successful');\n        console.log('Sign up successful', response);\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.notificationService.showError('Sign up failed: ' + error.error.message);\n        console.error('Sign up failed', error);\n      }\n    );\n  }\n\n  public addAddress(){\n    this.user.addresses.push({address_line1: '', address_line2:'', city: '', state: '', postal_code: '', country: ''});\n  }\n\n  public removeAddress(index: number) {\n    if(this.user.addresses.length > 1) {\n      this.user.addresses.splice(index, 1);\n    }\n  }\n}\n","<h1>Sign Up</h1>\r\n<form (ngSubmit)=\"signup()\" class=\"login-form\">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Username</mat-label>\r\n    <input matInput type=\"text\" id=\"username\" [(ngModel)]=\"user.username\" name=\"username\" required>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Full Name</mat-label>\r\n    <input matInput type=\"text\" id=\"fullName\" [(ngModel)]=\"user.fullName\" name=\"fullName\" required>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Email</mat-label>\r\n    <input matInput type=\"email\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\" required>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Mobile</mat-label>\r\n    <input matInput type=\"text\" id=\"mobile\" [(ngModel)]=\"user.mobile\" name=\"mobile\" required>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Password</mat-label>\r\n    <input matInput type=\"password\" id=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Address</mat-label>\r\n    <textarea matInput id=\"address\" [(ngModel)]=\"user.address\" name=\"address\" required></textarea>\r\n  </mat-form-field>\r\n\r\n  <button mat-raised-button color=\"primary\" type=\"submit\">Sign Up</button>\r\n</form>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}