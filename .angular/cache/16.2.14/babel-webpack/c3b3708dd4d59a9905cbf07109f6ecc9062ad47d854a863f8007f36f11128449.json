{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth/auth.service\";\nexport class OrderService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n  }\n  getOrderHistory() {\n    const user = this.authService.getCurrentUser();\n    return this.http.get(`/api/users/${user.id}/orders`);\n  }\n  // for saving review\n  saveReview(orderId, rating, review, restaurantId) {\n    return this.http.post(`http://localhost:3000/api/reviews`, {\n      orderId,\n      rating,\n      review,\n      restaurantId\n    });\n  }\n  static #_ = this.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["OrderService","constructor","http","authService","getOrderHistory","user","getCurrentUser","get","id","saveReview","orderId","rating","review","restaurantId","post","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\VI_Pranav\\Desktop\\food-delivery-app\\src\\app\\services\\order.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderHistory } from '../models/order-history.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  constructor(public http: HttpClient, public authService: AuthService) { }\r\n\r\n  public getOrderHistory(): Observable<any> {\r\n    const user = this.authService.getCurrentUser();\r\n    return this.http.get<OrderHistory[]>(`/api/users/${user.id}/orders`);\r\n  }\r\n\r\n  // for saving review\r\n  public saveReview(orderId: number, rating: number, review: string, restaurantId: number): Observable<any>{\r\n    return this.http.post(`http://localhost:3000/api/reviews`, {orderId, rating, review, restaurantId});\r\n  }\r\n}\r\n"],"mappings":";;;AASA,OAAM,MAAOA,YAAY;EAEvBC,YAAmBC,IAAgB,EAASC,WAAwB;IAAjD,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,WAAW,GAAXA,WAAW;EAAiB;EAEjEC,eAAeA,CAAA;IACpB,MAAMC,IAAI,GAAG,IAAI,CAACF,WAAW,CAACG,cAAc,EAAE;IAC9C,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAiB,cAAcF,IAAI,CAACG,EAAE,SAAS,CAAC;EACtE;EAEA;EACOC,UAAUA,CAACC,OAAe,EAAEC,MAAc,EAAEC,MAAc,EAAEC,YAAoB;IACrF,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,mCAAmC,EAAE;MAACJ,OAAO;MAAEC,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,CAAC;EACrG;EAAC,QAAAE,CAAA,G;qBAZUf,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZtB,YAAY;IAAAuB,OAAA,EAAZvB,YAAY,CAAAwB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}